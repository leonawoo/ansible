---
- name: Install AWS Cloudwatch Agent on Windows
  hosts: windows
  tasks:
    # Check if AWS Cloudwatch Agent service is installed
    - name: check-cloudwatch | Check if Cloudwatch Agent service is installed
      win_service:
        name: "AmazonCloudWatchAgent"
      register: CloudWatchServiceResult

    # Install the Cloudwatch Agent if it isn't already installed
    - name: install-cloudwatch
      win_package:
        path: https://amazoncloudwatch-agent.s3.amazonaws.com/windows/amd64/latest/amazon-cloudwatch-agent.msi
        creates_service: "AmazonCloudWatchAgent"
        state: present
      register: CloudWatchInstall

    # Reboot if required after the installation
    - name: install-cloudwatch | Reboot if required
      win_reboot:
      when: CloudWatchInstall.reboot_required

    # Re-check the Cloudwatch Agent service after installation
    - name: check-cloudwatch | Re-check Cloudwatch Agent service
      win_service:
        name: "AmazonCloudWatchAgent"
      register: CloudWatchServiceResultAfterInstall

    # If AWS Cloudwatch Agent service is not installed after the installation task, fail the playbook
    - name: check-cloudwatch | If Cloudwatch Agent service is not installed, fail playbook
      fail:
        msg: "AWS Cloudwatch Agent did not install, do not continue"
      when:
        - CloudWatchServiceResultAfterInstall['exists'] == false

    - name: Copy CloudWatch configuration file
      win_copy:
        content: |
          [agent]
            collection_jitter = "0s"
            debug = false
            flush_interval = "1s"
            flush_jitter = "0s"
            hostname = ""
            interval = "60s"
            logfile = "C:\\ProgramData\\Amazon\\AmazonCloudWatchAgent\\Logs\\amazon-cloudwatch-agent.log"
            logtarget = "lumberjack"
            metric_batch_size = 1000
            metric_buffer_limit = 10000
            omit_hostname = false
            precision = ""
            quiet = false
            round_interval = false

            [inputs]

              [[inputs.win_perf_counters]]
                DisableReplacer = true

                [[inputs.win_perf_counters.object]]
                  Counters = ["% Free Space"]
                  Instances = ["*"]
                  Measurement = "LogicalDisk"
                  ObjectName = "LogicalDisk"
                  WarnOnMissing = true

                [[inputs.win_perf_counters.object]]
                  Counters = ["% Committed Bytes In Use"]
                  Instances = ["------"]
                  Measurement = "Memory"
                  ObjectName = "Memory"
                  WarnOnMissing = true
                [inputs.win_perf_counters.tags]
                  metricPath = "metrics"

                [[inputs.win_perf_counters.object]]
                  Counters = ["% Usage"]
                  Instances = ["*"]
                  Measurement = "Paging File"
                  ObjectName = "Paging File"
                  WarnOnMissing = true

              [[inputs.win_perf_counters.object]]
                  Counters = ["% Disk Time"]
                  Instances = ["*"]
                  Measurement = "PhysicalDisk"
                  ObjectName = "PhysicalDisk"
                  WarnOnMissing = true

                [[inputs.win_perf_counters.object]]
                  Counters = ["% User Time", "% Idle Time", "% Interrupt Time"]
                  Instances = ["_Total"]
                  Measurement = "Processor"
                  ObjectName = "Processor"
                  WarnOnMissing = true
                [inputs.win_perf_counters.tags]
                  metricPath = "metrics"


            [outputs]

              [[outputs.cloudwatch]]
                force_flush_interval = "60s"
                namespace = "CWAgent"
                region = "us-east-1"
                tagexclude = ["host", "metricPath"]
                [outputs.cloudwatch.tagpass]
                  metricPath = ["metrics"]

            [processors]

              [[processors.ec2tagger]]
                ec2_instance_tag_keys = ["aws:autoscaling:groupName"]
                ec2_metadata_tags = ["ImageId", "InstanceId", "InstanceType"]
                refresh_interval_seconds = "0s"
                [processors.ec2tagger.tagpass]
                  metricPath = ["metrics"]

        dest: "C:\\ProgramData\\Amazon\\AmazonCloudWatchAgent\\amazon-cloudwatch-agent.toml"

    # Print debug information
    - name: Print debug information
      debug:
        msg: "Windows | Install Cloudwatch Agent | System {{ inventory_hostname }} has OS {{ansible_distribution}}"
      tags: debug_info
